.mt-2 {
  margin-top: 20px;
}

.select-box {
  position: relative;
  display: block;
  width: 100%;
  margin: 10px auto;
  // font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
  // font-size: 18px;
  color: #60666d;
  margin-bottom: 15px;
  @extend input;
  
  // @media (min-width: 768px) {
  //   width: 70%;
  // }
  
  // @media (min-width: 992px) {
  //   width: 50%;
  // }
  
  // @media (min-width: 1200px) {
  //   width: 30%;
  // }
  
  &__current {
    position: relative;
    // box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);
    cursor: pointer;
    outline: none;
    
    &:focus {
      & + .select-box__list {
        opacity: 1;
        z-index: 100;

        // We have to set "animation-name: none;" to make the list visible (read below how it works)

        animation-name: none;
        
        .select-box__option {
          cursor: pointer;
        }
      }
      
      .select-box__icon {
        transform: translateY(-50%) rotate(180deg);
      }
    }
  }
  
  &__icon {
    position: absolute;
    top: 50%;
    right: 15px;
    transform: translateY(-50%);
    width: 20px;
    opacity: 0.3;
    transition: 0.2s ease;
  }
  
  &__value {
    display: flex;
  }
  
  &__input {
    display: none;
    
    &:checked + .select-box__input-text {
      display: block;
    }
  }
  
  &__input-text {
    display: none;
    width: 100%;
    margin: 0;
    padding: 15px;
    background-color: #fff;
    padding-left:0;
    color:black;
  }
  
  &__list {
    position: absolute;
    width: 100%;
    padding: 0;
    list-style: none;
    opacity: 0;
    left:0;
    margin-top: 12px;
    
    // We need to use animation with delay.
    // Otherwise the click event will not have time to run on label, because this element disapears immediately when .select-box__current element loses the focus.
    // This delay will not be noticed because we set "opacity" to "0".
    // We also use "animation-fill-mode: forwards" to make the list stay hidden.
    
    animation-name: HideList;
    animation-duration: 0.5s;
    animation-delay: 0.5s;
    animation-fill-mode: forwards;
    animation-timing-function: step-start;
    box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);
  }
  
  &__option {
    display: block;
    padding: 15px;
    background-color: #fff;
    
    &:hover,
    &:focus {
      color: #546c84;
      background-color: #e5e5e5;
      // background-color: #fbfbfb;
      // @extend input:focus
    }
  }
}

@keyframes HideList {
  from {
    transform: scaleY(1);
  }
  to {
    transform: scaleY(0);
  }
}



.select_wrapper {
  @extend input;
  display: flex;
  flex-flow: row wrap;
  // background: #2c3e50;
  // overflow: hidden;
  background: transparent;
  border-radius: .25em;
  padding: 0;
  position: relative;
  margin-bottom: 0;

  .error {
    text-align: center;
    color: red;
    font-weight: bold;
    width: 100%;
    border: 1px solid red
  }

  .break {
    flex-basis: 100%;
    height: 0;
  }

  &::after {
    content: url("../i/dropdown_arrow.svg");
    // content: '\25BC';
    position: absolute;
    top: 0;
    right: 0;
    padding: 0em;
    @extend .select-box__icon;
    cursor: pointer;
    pointer-events: none;
    -webkit-transition: .25s all ease;
    -o-transition: .25s all ease;
    transition: .25s all ease;
    transform: translate(-150%,70%);
  }

  // &:active::after {
  //   transform: scale(2,2);
  // }

  // &:hover{
  //   ::after {
  //     color: #f39c12;
  // }


  
  & select {
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    outline: 0;
    min-height: 40px;
    border: none;
    color: black;
    flex: 1;
    border: 1px solid darken($color: #fafafa, $amount: 10);

    ::-ms-expand {
      display: none;
    }
    &:focus {
      background-color: darken($color: #fafafa, $amount: 0);
      box-shadow: inset 0 1px 1px rgba(229, 229, 229, 0.75), 0 0 3px rgba(228, 0, 58, 0.6);
    }
    
    &:hover {
      cursor: pointer;
      background-color: #fafafa;
      border: 1px solid darken($color: #fafafa, $amount: 20)
      
    }

    & option {
      outline: none;
      border: none;
    }

  }
}

